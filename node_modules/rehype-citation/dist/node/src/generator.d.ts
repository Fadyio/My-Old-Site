export default rehypeCitationGenerator;
export type Node = import('hast').Node;
export type Parent = import('hast').Parent;
export type Root = import('hast').Root;
export type Visitor = import('unist-util-visit').Visitor<Node>;
export type CiteItem = import('./parse-citation').CiteItem;
/**
 * Configuration.
 */
export type Options = {
    /**
     * Name of bibtex or CSL-JSON file
     */
    bibliography?: string;
    /**
     * Optional path to file (node). Will be joined with `options.bibliography` and used in place of cwd of file if provided.
     */
    path?: string;
    /**
     * One of 'apa', 'vancouver', 'harvard1', 'chicago', 'mla'. A local file path or URL to a valid CSL file is also accepted.
     */
    csl?: 'apa' | 'vancouver' | 'harvard1' | 'chicago' | 'mla' | string;
    /**
     * Locale to use in formatting citations. Defaults to en-US. A local file path or URL to a valid locale file is also accepted.
     */
    lang?: string;
    /**
     * By default, biliography is inserted after the entire markdown file.
     * If the file contains `[^Ref]`, the biliography will be inserted there instead.
     */
    suppressBibliography?: boolean;
    /**
     * Citation IDs (@item1) to include in the bibliography even if they are not cited in the document
     */
    noCite?: string[];
    /**
     * Class(es) to add to the inline citation.
     */
    inlineClass?: string[];
    /**
     * Class(es) to add to the inline bibliography. Leave empty for no inline bibliography.
     */
    inlineBibClass?: string[];
};
/**
 * Rehype plugin that formats citations in markdown documents and insert bibliography in html format
 *
 *    [-@wadler1990]                              --> (1990)
 *    [@hughes1989, sec 3.4]                      --> (Hughes 1989, sec 3.4)
 *    [see @wadler1990; and @hughes1989, pp. 4]   --> (see Wadler 1990 and Hughes 1989, pp. 4)
 *
 * @param {*} Cite cite object from citation-js configured with the required CSLs
 * @return {import('unified').Plugin<[Options?], Root>}
 */
declare function rehypeCitationGenerator(Cite: any): import('unified').Plugin<[Options?], Root>;
