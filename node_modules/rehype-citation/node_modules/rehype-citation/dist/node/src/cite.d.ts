export default Cite;
declare function Cite(data: any, opts: any): Cite;
declare class Cite {
    constructor(data: any, opts: any);
    _options: {};
    log: any[];
    data: any[];
}
declare namespace Cite {
    const async: any;
    const validateOptions: any;
    const validateOutputOptions: any;
    const input: (...args: any[]) => any;
    const inputAsync: (...args: any[]) => Promise<any>;
    const util: {
        attr: {
            getAttributedEntry(string: any, name: any, value: any): any;
            getPrefixedEntry(value: any, id: any): any;
            getWrappedEntry(value: any, source: any, affixes: any): any;
        };
    } & typeof core.util;
    namespace version {
        const cite: number;
        const citeproc: any;
    }
    namespace CSL {
        export { fetchEngine as engine };
        export function item(data: any): (id: any) => any;
        export function item(data: any): (id: any) => any;
        export function locale(lang: any): any;
        export function locale(lang: any): any;
        export function style(style: any): any;
        export function style(style: any): any;
        export namespace register {
            const addTemplate: any;
            const getTemplate: any;
            const hasTemplate: any;
            const addLocale: any;
            const getLocale: any;
            const hasLocale: any;
        }
    }
    const plugins: {};
    const parse: any;
    const get: any;
}
import * as core from "./citation-js/core/index.js";
import { fetchEngine } from "./citation-js/plugin-csl/engines.js";
