export const required: {
    biblatex: {
        article: (string | string[])[];
        book: (string | string[])[];
        mvbook: (string | string[])[];
        inbook: (string | string[])[];
        booklet: (string | string[])[];
        collection: (string | string[])[];
        mvcollection: (string | string[])[];
        incollection: (string | string[])[];
        dataset: (string | string[])[];
        online: (string | string[])[];
        patent: (string | string[])[];
        periodical: (string | string[])[];
        proceedings: (string | string[])[];
        mvproceedings: (string | string[])[];
        inproceedings: (string | string[])[];
        report: (string | string[])[];
        thesis: (string | string[])[];
        unpublished: (string | string[])[];
        conference: (string | string[])[];
        electronic: (string | string[])[];
        mastersthesis: (string | string[])[];
        phdthesis: (string | string[])[];
        techreport: (string | string[])[];
        www: (string | string[])[];
    };
    bibtex: {
        article: string[];
        book: (string | string[])[];
        booklet: string[];
        inbook: (string | string[])[];
        incollection: string[];
        inproceedings: string[];
        mastersthesis: string[];
        phdthesis: string[];
        proceedings: string[];
        techreport: string[];
        unpublished: string[];
    };
};
export const fieldTypes: {
    abstract: string[];
    addendum: string[];
    afterword: string[];
    annotation: string[];
    annotator: string[];
    author: string[];
    authortype: string[];
    bookauthor: string[];
    bookpagination: string[];
    booksubtitle: string[];
    booktitle: string[];
    booktitleaddon: string[];
    chapter: string[];
    commentator: string[];
    date: string[];
    doi: string[];
    edition: string[];
    editor: string[];
    editora: string[];
    editorb: string[];
    editorc: string[];
    editortype: string[];
    editoratype: string[];
    editorbtype: string[];
    editorctype: string[];
    eid: string[];
    entrysubtype: string[];
    eprint: string[];
    eprintclass: string[];
    eprinttype: string[];
    eventdate: string[];
    eventtitle: string[];
    eventtitleaddon: string[];
    file: string[];
    foreword: string[];
    holder: string[];
    howpublished: string[];
    indextitle: string[];
    institution: string[];
    introduction: string[];
    isan: string[];
    isbn: string[];
    ismn: string[];
    isrn: string[];
    issn: string[];
    issue: string[];
    issuesubtitle: string[];
    issuetitle: string[];
    iswc: string[];
    journalsubtitle: string[];
    journaltitle: string[];
    label: string[];
    language: string[];
    library: string[];
    location: string[];
    mainsubtitle: string[];
    maintitle: string[];
    maintitleaddon: string[];
    month: string[];
    nameaddon: string[];
    note: string[];
    number: string[];
    organization: string[];
    origdate: string[];
    origlanguage: string[];
    origlocation: string[];
    origpublisher: string[];
    origtitle: string[];
    pages: string[];
    pagetotal: string[];
    pagination: string[];
    part: string[];
    publisher: string[];
    pubstate: string[];
    reprinttitle: string[];
    series: string[];
    shortauthor: string[];
    shorteditor: string[];
    shorthand: string[];
    shorthandintro: string[];
    shortjournal: string[];
    shortseries: string[];
    shorttitle: string[];
    subtitle: string[];
    title: string[];
    titleaddon: string[];
    translator: string[];
    type: string[];
    url: string[];
    urldate: string[];
    venue: string[];
    version: string[];
    volume: string[];
    volumes: string[];
    year: string[];
    crossref: string[];
    entryset: string[];
    execute: string[];
    gender: string[];
    langid: string[];
    langidopts: string[];
    ids: string[];
    indexsorttitle: string[];
    keywords: string[];
    options: string[];
    presort: string[];
    related: string[];
    relatedoptions: string[];
    relatedtype: string[];
    relatedstring: string[];
    sortkey: string[];
    sortname: string[];
    sortshorthand: string[];
    sorttitle: string[];
    sortyear: string[];
    xdata: string[];
    xref: string[];
    namea: string[];
    nameb: string[];
    namec: string[];
    nameatype: string[];
    namebtype: string[];
    namectype: string[];
    lista: string[];
    listb: string[];
    listc: string[];
    listd: string[];
    liste: string[];
    listf: string[];
    usera: string[];
    userb: string[];
    userc: string[];
    userd: string[];
    usere: string[];
    userf: string[];
    verba: string[];
    verbb: string[];
    verbc: string[];
    address: string[];
    annote: string[];
    archiveprefix: string[];
    journal: string[];
    key: string[];
    pdf: string[];
    primaryclass: string[];
    school: string[];
    numpages: string[];
    pmid: string[];
    pmcid: string[];
};
export const diacritics: {
    '`': string;
    "'": string;
    '^': string;
    '~': string;
    '=': string;
    u: string;
    '.': string;
    '"': string;
    r: string;
    H: string;
    v: string;
    b: string;
    d: string;
    c: string;
    k: string;
    t: string;
    textcommabelow: string;
};
export const commands: {
    textquotesingle: string;
    textasciigrave: string;
    textquotedbl: string;
    textdollar: string;
    textless: string;
    textgreater: string;
    textbackslash: string;
    textasciicircum: string;
    textunderscore: string;
    textbraceleft: string;
    textbar: string;
    textbraceright: string;
    textasciitilde: string;
    textexclamdown: string;
    textcent: string;
    textsterling: string;
    textcurrency: string;
    textyen: string;
    textbrokenbar: string;
    textsection: string;
    textasciidieresis: string;
    textcopyright: string;
    textordfeminine: string;
    guillemetleft: string;
    guillemotleft: string;
    textlnot: string;
    textregistered: string;
    textasciimacron: string;
    textdegree: string;
    textpm: string;
    texttwosuperior: string;
    textthreesuperior: string;
    textasciiacute: string;
    textmu: string;
    textparagraph: string;
    textperiodcentered: string;
    textonesuperior: string;
    textordmasculine: string;
    guillemetright: string;
    guillemotright: string;
    textonequarter: string;
    textonehalf: string;
    textthreequarters: string;
    textquestiondown: string;
    AE: string;
    DH: string;
    texttimes: string;
    O: string;
    TH: string;
    ss: string;
    ae: string;
    dh: string;
    textdiv: string;
    o: string;
    th: string;
    DJ: string;
    dj: string;
    i: string;
    IJ: string;
    ij: string;
    L: string;
    l: string;
    NG: string;
    ng: string;
    OE: string;
    oe: string;
    textflorin: string;
    j: string;
    textasciicaron: string;
    textasciibreve: string;
    textacutedbl: string;
    textgravedbl: string;
    texttildelow: string;
    textbaht: string;
    SS: string;
    textcompwordmark: string;
    textendash: string;
    textemdash: string;
    textbardbl: string;
    textquoteleft: string;
    textquoteright: string;
    quotesinglbase: string;
    textquotedblleft: string;
    textquotedblright: string;
    quotedblbase: string;
    textdagger: string;
    textdaggerdbl: string;
    textbullet: string;
    textellipsis: string;
    textperthousand: string;
    textpertenthousand: string;
    guilsinglleft: string;
    guilsinglright: string;
    textreferencemark: string;
    textinterrobang: string;
    textfractionsolidus: string;
    textlquill: string;
    textrquill: string;
    textdiscount: string;
    textcolonmonetary: string;
    textlira: string;
    textnaira: string;
    textwon: string;
    textdong: string;
    texteuro: string;
    textpeso: string;
    textcelsius: string;
    textnumero: string;
    textcircledP: string;
    textrecipe: string;
    textservicemark: string;
    texttrademark: string;
    textohm: string;
    textmho: string;
    textestimated: string;
    textleftarrow: string;
    textuparrow: string;
    textrightarrow: string;
    textdownarrow: string;
    textminus: string;
    Hwithstroke: string;
    hwithstroke: string;
    textasteriskcentered: string;
    textsurd: string;
    textlangle: string;
    textrangle: string;
    textblank: string;
    textvisiblespace: string;
    textopenbullet: string;
    textbigcircle: string;
    textmusicalnote: string;
    textmarried: string;
    textdivorced: string;
    textinterrobangdown: string;
    textcommabelow: any;
    copyright: string;
    Gamma: string;
    Delta: string;
    Theta: string;
    Lambda: string;
    Xi: string;
    Pi: string;
    Sigma: string;
    Phi: string;
    Psi: string;
    Omega: string;
    alpha: string;
    beta: string;
    gamma: string;
    delta: string;
    varepsilon: string;
    zeta: string;
    eta: string;
    theta: string;
    iota: string;
    kappa: string;
    lambda: string;
    mu: string;
    nu: string;
    xi: string;
    pi: string;
    rho: string;
    varsigma: string;
    sigma: string;
    tau: string;
    upsilon: string;
    varphi: string;
    chi: string;
    psi: string;
    omega: string;
    vartheta: string;
    Upsilon: string;
    phi: string;
    varpi: string;
    varrho: string;
    epsilon: string;
};
export namespace defaultStrings {
    const jan: string;
    const feb: string;
    const mar: string;
    const apr: string;
    const may: string;
    const jun: string;
    const jul: string;
    const aug: string;
    const sep: string;
    const oct: string;
    const nov: string;
    const dec: string;
    const acmcs: string;
    const acta: string;
    const cacm: string;
    const ibmjrd: string;
    const ibmsj: string;
    const ieeese: string;
    const ieeetc: string;
    const ieeetcad: string;
    const ipl: string;
    const jacm: string;
    const jcss: string;
    const scp: string;
    const sicomp: string;
    const tocs: string;
    const tods: string;
    const tog: string;
    const toms: string;
    const toois: string;
    const toplas: string;
    const tcs: string;
}
export namespace formattingEnvs {
    const it: string;
    const itshape: string;
    const sl: string;
    const slshape: string;
    const em: string;
    const bf: string;
    const bfseries: string;
    const sc: string;
    const scshape: string;
    const rm: any;
    const sf: any;
    const tt: any;
}
export namespace formattingCommands {
    const textit: string;
    const textsl: string;
    const emph: string;
    const mkbibitalic: string;
    const mkbibemph: string;
    const textbf: string;
    const strong: string;
    const mkbibbold: string;
    const textsc: string;
    const textsuperscript: string;
    const textsubscript: string;
    const enquote: string;
    const mkbibquote: string;
    const textmd: any;
    const textrm: any;
    const textsf: any;
    const texttt: any;
    const textup: any;
}
export namespace formatting {
    const italics: string[];
    const bold: string[];
    const superscript: string[];
    const subscript: string[];
    const smallcaps: string[];
    const nocase: string[];
    const quotes: string[];
}
export namespace argumentCommands {
    function ElsevierGlyph(glyph: any): string;
    function ElsevierGlyph(glyph: any): string;
    function href(url: any, text: any): any;
    function href(url: any, text: any): any;
    function url(url: any): any;
    function url(url: any): any;
}
export const ligaturePattern: RegExp;
export const ligatures: {
    '--': string;
    '---': string;
    '``': string;
    "''": string;
    '~': string;
};
export const mathScriptFormatting: {
    '^': string;
    sp: string;
    _: string;
    sb: string;
    mathrm: any;
};
export const mathScripts: {
    '^': {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        '+': string;
        '-': string;
        '=': string;
        '(': string;
        ')': string;
        i: string;
        n: string;
    };
    _: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        '+': string;
        '-': string;
        '=': string;
        '(': string;
        ')': string;
        a: string;
        e: string;
        o: string;
        x: string;
        ə: string;
        h: string;
        k: string;
        l: string;
        m: string;
        n: string;
        s: string;
        p: string;
        t: string;
    };
};
export const sentenceCaseLanguages: string[];
