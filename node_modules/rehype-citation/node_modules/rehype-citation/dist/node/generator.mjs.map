{"version":3,"file":"generator.mjs","sources":["../../src/regex.js","../../src/parse-citation.js","../../src/utils.js","../../src/html-transform-node.js","../../src/generator.js"],"sourcesContent":["/**\n * Captures normal citation in square bracket and in-text citation\n * Citation key start should start with a letter, digit, or _,\n * and contains only alphanumerics and single internal punctuation characters (:.#$%&-+?<>~/),\n *\n * e.g. [-@wadler1990], [@hughes1989, sec 3.4], [see @wadler1990; and @hughes1989, pp. 4]\n * and @wadler1990\n *\n * Group #1 - citation term without [] bracket e.g. -@wadler1990\n * Group #2 - in-text citation term e.g. @wadler1990\n *\n * \\[([^[\\]]*@[^[\\]]+)\\] for group #1\n * (?!\\b)@([a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*) for group #2\n * Use (?!\\b) to avoid email like address e.g. xyx@google.com\n * */\nexport const citeExtractorRe =\n  /\\[([^[\\]]*@[^[\\]]+)\\]|(?!\\b)(@[a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*)/\nexport const citeKeyRe = /@([a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*)/\nexport const citeBracketRe = /\\[.*\\]/\n","/**\n * @typedef CiteItem\n *   Cite item to be passed into citeproc-js\n * @property {string} [id]\n *   The id field is required\n * @property {string} [locator]\n *   A string identifying a page number or other pinpoint location or range within the resource;\n * @property {string} [label]\n *   Path to file\n * @property {string} [prefix]\n *   A string to print before this cite item\n * @property {string} [suffix]\n *   A string to print after this cite item\n * @property {boolean} [suppress-author]\n *   If true, author names will not be included in the citation output for this cite\n * @property {boolean} [author-only]\n *   If true, only the author name will be included in the citation output for this cite\n */\n\nimport { citeBracketRe, citeKeyRe } from './regex.js'\n\nconst locatorMapping = {\n  book: 'book',\n  'bk.': 'book',\n  'bks.': 'book',\n  chapter: 'chapter',\n  'chap.': 'chapter',\n  'chaps.': 'chapter',\n  column: 'column',\n  'col.': 'column',\n  'cols.': 'column',\n  figure: 'figure',\n  'fig.': 'figure',\n  'figs.': 'figure',\n  folio: 'folio',\n  'fol.': 'folio',\n  'fols.': 'folio',\n  number: 'number',\n  'no.': 'number',\n  'nos.': 'number',\n  line: 'line',\n  'l.': 'line',\n  'll.': 'line',\n  note: 'note',\n  'n.': 'note',\n  'nn.': 'note',\n  opus: 'opus',\n  'op.': 'opus',\n  'opp.': 'opus',\n  page: 'page',\n  'p.': 'page',\n  'pp.': 'page',\n  paragraph: 'paragraph',\n  'para.': 'paragraph',\n  'paras.': 'paragraph',\n  part: 'part',\n  'pt.': 'part',\n  'pts.': 'part',\n  section: 'section',\n  'sec.': 'section',\n  'secs.': 'section',\n  'sub verbo': 'sub verbo',\n  's.v.': 'sub verbo',\n  's.vv.': 'sub verbo',\n  verse: 'verse',\n  'v.': 'verse',\n  'vv.': 'verse',\n  volume: 'volume',\n  'vol.': 'volume',\n  'vols.': 'volume',\n  '¶': 'paragraph',\n  '¶¶': 'paragraph',\n  '§': 'section',\n  '§§': 'section',\n}\n\n/**\n * Parses a given citation string and return properties and entries required for cite-proc.\n * Adapted from https://github.com/Zettlr/Citr/blob/master/lib/citr.ts\n *\n * @param {string} citeString Cite string in the form of '[@item]' or '@item'\n * @return {[Object, CiteItem[]]} [properties, entries]\n */\nexport const parseCitation = (citeString) => {\n  /** @type {CiteItem[]} */\n  let entries = []\n  let properties\n  if (citeBracketRe.test(citeString)) {\n    properties = { noteIndex: 0 }\n    // Handle citations in the form of [@item1; @item2]\n    const citeItems = citeString.substr(1, citeString.length - 2).split(';')\n    for (const citeItem of citeItems) {\n      // Prefix is the portion before @ e.g. [see @item1] or an empty string\n      let prefix = ''\n      let locator = ''\n      let label = 'page'\n      let suffix = ''\n      const citeChunk = citeItem.split('@')\n      if (citeChunk.length === 1) {\n        throw new Error('Cite key should be in the form of @key')\n      } else if (citeChunk.length > 2) {\n        throw new Error('More than one cite key @ detected, please separate keys with ;')\n      }\n      prefix += citeChunk[0]\n      prefix = prefix.trim()\n\n      // If [-@item1], suppress author\n      let suppressAuthor = citeItem.indexOf('@') > 0 && citeItem[citeItem.indexOf('@') - 1] === '-'\n      if (suppressAuthor) prefix = prefix.substr(0, prefix.length - 1).trim()\n\n      // The citation key can be terminated with a comma or space\n      let commaIndex = citeChunk[1].indexOf(',') + 1\n      // If the commaIndex is 0, this means there was no comma - check for space\n      if (commaIndex === 0) commaIndex = citeChunk[1].indexOf(' ') + 1\n      // Pass undefined to extract everything\n      if (commaIndex <= 0) commaIndex = undefined\n      const citeKey = citeItem.substr(citeItem.indexOf('@'), commaIndex).match(citeKeyRe)[0]\n\n      // We are left with the locator, suffix and label\n      let afterKey = citeItem.split('@')[1].substr(citeKey.length).trim()\n      if (afterKey[0] === ',') afterKey = afterKey.substr(1).trim()\n      // Locator should be in the form of 11-22, 33\n      // Would not work form roman numerals or alphabetical sections\n      const locatorMatch = afterKey.match(/(\\d|-| |,)+/g)\n      if (locatorMatch !== null) {\n        locator = locatorMatch[0].trim()\n        // String before the locator is taken to be the label\n        // Use heuristic from https://pandoc.org/MANUAL.html#citation-syntax to convert locator label to valid\n        // Label has to be one of the following: https://docs.citationstyles.org/en/stable/specification.html#locators\n        label = afterKey.split(locator)[0].trim()\n        label = locatorMapping[label] || 'page'\n        // String after the locator is taken to be the suffix\n        suffix = afterKey.split(locator)[1].trim()\n      } else {\n        // If no locator is found, entire string is assumed to be the suffix\n        suffix = afterKey.trim()\n      }\n\n      entries.push({\n        // Get the first capture group which returns the citekey without @\n        id: citeItem.match(citeKeyRe)[1],\n        locator,\n        label,\n        prefix,\n        suffix,\n        'suppress-author': suppressAuthor,\n      })\n    }\n  } else {\n    // Single item in the form of @item1\n    // See https://citeproc-js.readthedocs.io/en/latest/running.html#special-citation-forms\n    properties = { noteIndex: 0, mode: 'composite' }\n    entries = [citeString].map((str) => ({\n      id: str.match(citeKeyRe)[1],\n    }))\n  }\n  return [properties, entries]\n}\n","import fetch from 'cross-fetch'\n\nexport const isNode = typeof window === 'undefined'\n\nexport const readFile = async (path) => {\n  if (isValidHttpUrl(path)) {\n    return fetch(path)\n      .then((response) => response.text())\n      .then((data) => data)\n  } else {\n    if (isNode) {\n      return import('fs').then((fs) => fs.readFileSync(path, 'utf8'))\n    } else {\n      throw new Error(`Cannot read non valid URL in node env.`)\n    }\n  }\n}\n\n/**\n * Check if valid URL\n * https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url\n *\n * @param {string} str\n * @return {boolean}\n */\nexport const isValidHttpUrl = (str) => {\n  let url\n\n  try {\n    url = new URL(str)\n  } catch (_) {\n    return false\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:'\n}\n\n/**\n * Get bibliography by merging options and vfile data\n *\n * @param {import('./generator.js').Options} options\n * @param {import('vfile').VFile} file\n */\nexport const getBibliography = async (options, file) => {\n  let bibliography = ''\n  if (options.bibliography) {\n    bibliography = options.bibliography\n    // @ts-ignore\n  } else if (file?.data?.frontmatter?.bibliography) {\n    // @ts-ignore\n    bibliography = file.data.frontmatter.bibliography\n    // If local path, get absolute path\n    if (!isValidHttpUrl(bibliography)) {\n      if (isNode) {\n        bibliography = await import('path').then((path) =>\n          path.join(options.path || file.cwd, bibliography)\n        )\n      } else {\n        throw new Error(`Cannot read non valid bibliography URL in node env.`)\n      }\n    }\n  }\n\n  return bibliography\n}\n","import parse5 from 'parse5'\nimport { fromParse5 } from 'hast-util-from-parse5'\n\n/**\n * Convert HTML to HAST node\n *\n * @param {string} html\n */\nexport const htmlToHast = (html) => {\n  const p5ast = parse5.parseFragment(html)\n  return fromParse5(p5ast).children[0]\n}\n","/**\n * @typedef {import('hast').Node} Node\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('unist-util-visit').Visitor<Node>} Visitor\n * @typedef {import('./parse-citation').CiteItem} CiteItem\n * @typedef Options\n *   Configuration.\n * @property {string} [bibliography]\n *   Name of bibtex or CSL-JSON file\n * @property {string} [path]\n *   Optional path to file (node). Will be joined with `options.bibliography` and used in place of cwd of file if provided.\n * @property {'apa'|'vancouver'|'harvard1'|'chicago'|'mla'|string} [csl]\n *   One of 'apa', 'vancouver', 'harvard1', 'chicago', 'mla' or name of the local csl file\n * @property {string} [lang]\n *   Locale to use in formatting citations. Defaults to en-US.\n * @property {boolean} [suppressBibliography]\n *   By default, biliography is inserted after the entire markdown file.\n *   If the file contains `[^Ref]`, the biliography will be inserted there instead.\n * @property {string[]} [noCite]\n *   Citation IDs (@item1) to include in the bibliography even if they are not cited in the document\n */\n\nimport { visit } from 'unist-util-visit'\nimport fetch from 'cross-fetch'\nimport { parseCitation } from './parse-citation.js'\nimport { citeExtractorRe } from './regex.js'\nimport { isNode, isValidHttpUrl, readFile, getBibliography } from './utils.js'\nimport { htmlToHast } from './html-transform-node.js'\n\nconst defaultCiteFormat = 'apa'\nconst permittedTags = ['div', 'p', 'span', 'li']\n\n/**\n * Generate citation using citeproc\n * This accounts for prev citations and additional properties\n *\n * @param {*} citeproc\n * @param {CiteItem[]} entries\n * @param {string} citationId\n * @param {any[]} citationPre\n * @param {*} [properties={ noteIndex: 0 }]\n * @return {*}\n */\nconst genCitation = (citeproc, entries, citationId, citationPre, properties = { noteIndex: 0 }) => {\n  const c = citeproc.processCitationCluster(\n    {\n      citationID: citationId,\n      citationItems: entries,\n      properties: properties,\n    },\n    citationPre.length > 0 ? citationPre : [],\n    []\n  )\n  // c = [ { bibchange: true, citation_errors: [] }, [ [ 0, '(1)', 'CITATION-1' ] ]]\n  const result = c[1].filter((x) => x[2] === citationId)\n  // Coerce to html to parse HTML code e.g. &#38; and return text node\n  const citeNode = htmlToHast(`<div>${result[0][1]}</div>`)\n  const textNode = citeNode.children[0]\n  return textNode\n}\n\n/**\n * Generate bibliography in html and convert it to hast\n *\n * @param {*} citeproc\n */\nconst genBiblioNode = (citeproc) => {\n  const [, bibBody] = citeproc.makeBibliography()\n  const bibliography =\n    '<div id=\"refs\" class=\"references csl-bib-body\">\\n' + bibBody.join('') + '</div>'\n  const biblioNode = htmlToHast(bibliography)\n  return biblioNode\n}\n\n/**\n * Rehype plugin that formats citations in markdown documents and insert bibliography in html format\n *\n *    [-@wadler1990]                              --> (1990)\n *    [@hughes1989, sec 3.4]                      --> (Hughes 1989, sec 3.4)\n *    [see @wadler1990; and @hughes1989, pp. 4]   --> (see Wadler 1990 and Hughes 1989, pp. 4)\n *\n * @param {*} Cite cite object from citation-js configured with the required CSLs\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypeCitationGenerator = (Cite) => {\n  return (options = {}) => {\n    return async (tree, file) => {\n      let bibliography = await getBibliography(options, file)\n      if (!bibliography) {\n        return\n      }\n\n      /** @type {string} */\n      let bibtexFile\n      /** @type {string} */ // @ts-ignore\n      const citeFormat = options.csl || file?.data?.frontmatter?.csl || defaultCiteFormat\n      if (isValidHttpUrl(bibliography)) {\n        isNode\n        const response = await fetch(bibliography)\n        bibtexFile = await response.text()\n      } else {\n        if (isNode) {\n          bibtexFile = await readFile(bibliography)\n        } else {\n          throw new Error(`Cannot read non valid bibliography URL in node env.`)\n        }\n      }\n\n      const citations = new Cite(bibtexFile)\n      const citationIds = citations.data.map((x) => x.id)\n      const citationPre = []\n      let citationId = 1\n      const config = Cite.plugins.config.get('@csl')\n      const citeproc = config.engine(citations.data, citeFormat, options.lang || 'en-US', 'html')\n      visit(tree, 'text', (node, idx, parent) => {\n        const match = node.value.match(citeExtractorRe)\n        //@ts-ignore\n        if (!match || !permittedTags.includes(parent.tagName)) return\n        const citeStartIdx = match.index\n        const citeEndIdx = match.index + match[0].length\n        const newChildren = []\n        // if preceding string\n        if (citeStartIdx !== 0) {\n          // create a new child node\n          newChildren.push({\n            type: 'text',\n            value: node.value.slice(0, citeStartIdx),\n          })\n        }\n\n        const [properties, entries] = parseCitation(match[0])\n\n        // If id is not in citation file (e.g. route alias or js package), abort process\n        for (const citeItem of entries) {\n          if (!citationIds.includes(citeItem.id)) return\n        }\n\n        const citedTextNode = genCitation(\n          citeproc,\n          entries,\n          `CITATION-${citationId}`,\n          citationPre,\n          properties\n        )\n\n        // Prepare citationPre and citationId for the next cite instance\n        citationPre.push([`CITATION-${citationId}`, 0])\n        citationId = citationId + 1\n\n        // TODO: return html with link\n        newChildren.push(citedTextNode)\n\n        // if trailing string\n        if (citeEndIdx < node.value.length) {\n          newChildren.push({\n            type: 'text',\n            value: node.value.slice(citeEndIdx),\n          })\n        }\n\n        // insert into the parent\n        parent.children = [\n          ...parent.children.slice(0, idx),\n          ...newChildren,\n          ...parent.children.slice(idx + 1),\n        ]\n      })\n\n      if (options.noCite) {\n        citeproc.updateItems(options.noCite.map((x) => x.replace('@', '')))\n      }\n\n      if (!options.suppressBibliography && citeproc.registry.mylist.length >= 1) {\n        const biblioNode = genBiblioNode(citeproc)\n        let bilioInserted = false\n\n        // Insert it at ^ref, if not found insert it as the last element of the tree\n        visit(tree, 'element', (node, idx, parent) => {\n          if (\n            (node.tagName === 'p' || node.tagName === 'div') &&\n            node.children[0].value === '[^ref]'\n          ) {\n            parent.children[idx] = biblioNode\n            bilioInserted = true\n          }\n        })\n\n        if (!bilioInserted) {\n          tree.children.push(biblioNode)\n        }\n      }\n    }\n  }\n}\n\nexport default rehypeCitationGenerator\n"],"names":["citeExtractorRe","citeKeyRe","citeBracketRe","locatorMapping","book","chapter","column","figure","folio","number","line","note","opus","page","paragraph","part","section","verse","volume","parseCitation","citeString","entries","properties","test","noteIndex","citeItems","substr","length","split","citeItem","prefix","locator","label","suffix","citeChunk","Error","trim","suppressAuthor","indexOf","commaIndex","undefined","citeKey","match","afterKey","locatorMatch","push","id","mode","map","str","readFile","path","isValidHttpUrl","fetch","then","response","text","data","fs","readFileSync","url","URL","_","protocol","getBibliography","options","file","bibliography","frontmatter","join","cwd","htmlToHast","html","p5ast","parse5","parseFragment","fromParse5","children","defaultCiteFormat","permittedTags","genCitation","citeproc","citationId","citationPre","c","processCitationCluster","citationID","citationItems","result","filter","x","citeNode","textNode","genBiblioNode","bibBody","makeBibliography","biblioNode","rehypeCitationGenerator","Cite","tree","bibtexFile","citeFormat","csl","citations","citationIds","config","plugins","get","engine","lang","visit","node","idx","parent","value","includes","tagName","citeStartIdx","index","citeEndIdx","newChildren","type","slice","citedTextNode","noCite","updateItems","replace","suppressBibliography","registry","mylist","bilioInserted"],"mappings":"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"}