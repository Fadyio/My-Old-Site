export type ComponentMap = import('mdx/types').MDXComponents;
export type MDXContentProps = {
    [props: string]: unknown;
    components?: import("mdx/types").MDXComponents | undefined;
};
/**
 * @typedef {import('mdx/types').MDXComponents} ComponentMap
 */
/**
 * @typedef {{[props: string]: unknown, components?: ComponentMap}} MDXContentProps
 */
/**
 *
 * @param {string} code - The string of code you got from bundleMDX
 * @param {Record<string, unknown>} [globals] - Any variables your MDX needs to have accessible when it runs
 * @return {React.FunctionComponent<MDXContentProps>}
 */
export function getMDXComponent(code: string, globals?: Record<string, unknown> | undefined): React.FunctionComponent<MDXContentProps>;
/**
 * @template ExportedObject
 * @template Frontmatter
 * @type {import('./types').MDXExportFunction<ExportedObject, Frontmatter>}
 * @param {string} code - The string of code you got from bundleMDX
 * @param {Record<string, unknown>} [globals] - Any variables your MDX needs to have accessible when it runs
 *
 */
export function getMDXExport<ExportedObject, Frontmatter>(code: string, globals?: Record<string, unknown> | undefined): import("./types").MDXExport<ExportedObject, Frontmatter>;
import * as React from "react";
