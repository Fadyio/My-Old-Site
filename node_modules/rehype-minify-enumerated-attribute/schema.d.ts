/**
 * @typedef Info
 * @property {string} [selector]
 * @property {string|null} [missing]
 * @property {string|null} [invalid]
 * @property {Array.<null|string|string[]>} states
 * @property {true} [allowUnknown]
 * @property {true} [caseSensitive]
 */
/**
 * This schema exposes a map of property names to (one or more) definitions.
 * Each definition defines how that attribute is enumerated.
 *
 * @type {Record<string, Info|Info[]>}
 */
export const schema: Record<string, Info | Info[]>
export type Info = {
  selector?: string | undefined
  missing?: string | null | undefined
  invalid?: string | null | undefined
  states: Array<null | string | string[]>
  allowUnknown?: true | undefined
  caseSensitive?: true | undefined
}
